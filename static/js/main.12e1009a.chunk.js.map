{"version":3,"sources":["components/moods/mood.tsx","global-state/buffering-provider.tsx","global-state/bottom-message-provider.tsx","global-state/muted-provider.tsx","components/moods/moods.tsx","types/music.ts","components/misc/loader/loader.tsx","components/bottom-indicator/bottom-indicator.tsx","assets/mute.svg","assets/unMute.svg","assets/profile.svg","components/misc/icon-button/icon-button.tsx","global-state/profile-modal-provider.tsx","components/controls/controls.tsx","types/user.ts","global-state/user-provider.tsx","helpers/helpers.ts","components/misc/input-field/input-field.tsx","assets/login.svg","components/login-signup/login-signup.tsx","assets/verified.svg","assets/logout.svg","assets/sample_badge.png","types/badge.ts","components/profile/profile.tsx","App.tsx","helpers/authentication-helper.ts","helpers/FirebaseHelper.ts","reportWebVitals.ts","index.tsx"],"names":["Mood","mood","playMusic","isSelected","onClick","className","a","fireBaseHelper","fetchMusic","musicList","Math","floor","random","length","BufferingContext","React","createContext","BufferingContextUpdate","value","BufferingProvider","children","useState","isBuffering","setIsBuffering","Provider","BottomMessageContext","BottomMessageContextUpdate","BottomMessageProvider","bottomMessage","setBottomMessage","MutedContext","MutedContextUpdate","useMuted","useContext","MutedProvider","isMuted","setIsMuted","current","Moods","moods","setMoods","isPlaying","setIsPlaying","selected","setSelected","music","setMusic","bg","setBg","useEffect","fetchMoods","fetchedMoods","title","id","style","backgroundImage","map","onStart","musicId","image","Image","src","onload","width","checkAndSetBg","link","onError","onBuffer","onBufferEnd","playing","muted","controls","autoPlay","url","loop","config","playerVars","height","vq","Music","artist","this","MiniLoader","BottomIndicator","message","IconButton","isLoading","text","icon","event","alt","ModalProfileContext","ModalProfileContextUpdate","useModalProfile","useModalProfileUpdate","ModalProfileProvider","isOpen","setIsOpen","Controls","toggleMuted","toggleProfile","profileToggled","mute","unMute","profile","LofiMoodsUser","name","imagesrc","badges","UserContext","UserContextUpdate","UserProvider","user","setUser","updateUser","displayName","photoURL","uid","authenticationHelper","auth","onAuthStateChanged","fireToast","duration","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","Helpers","errorToast","infoToast","textInputAlert","question","onConfirm","input","showCancelButton","then","isConfirmed","successToast","confirmDialog","confirmButtonColor","getById","document","getElementById","inputGetter","InputField","forwardRef","ref","type","label","passwordShown","setPasswordShown","htmlFor","onChange","target","checked","autoComplete","LoginSignup","isLogin","setIsLogin","isSubmitting","setIsSubmitting","emailRef","createRef","passwordRef","submit","login","signup","errorMessage","code","substring","indexOf","clickableClass","remember","window","open","write","Badge","iconsrc","Profile","undefined","LoginModal","myBadge","sampleBadge","ariaHideApp","overlayClassName","verified","badge","index","logout","e","preventDefault","signOut","toggleModal","shouldCloseOnOverlayClick","shouldCloseOnEsc","onRequestClose","firebaseInstance","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","getAuth","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getFirestore","getDocs","collection","querySnapshot","datas","forEach","doc","data","push","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mbASe,SAASA,EAAT,GAAiE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,QAC1D,OACE,qBACEC,UAAS,eAAUF,EAAa,SAAW,IAC3CC,QAAO,sBAAE,4BAAAE,EAAA,6DACPF,IADO,SAE6BG,GAAeC,WAAWP,GAFvD,OAEHQ,EAFG,OAGPP,EACEO,EAAUC,KAAKC,MAAMD,KAAKE,UAAYH,EAAUI,OAAS,MAJpD,2CAFX,SAUGZ,I,UCjBMa,EAAmBC,IAAMC,eAAc,GACvCC,EAAyBF,IAAMC,eAC1C,SAACE,OAWY,SAASC,EAAT,GAAyD,IAA5BC,EAA2B,EAA3BA,SAC1C,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAIA,OACE,cAACT,EAAiBU,SAAlB,CAA2BN,MAAOI,EAAlC,SACE,cAACL,EAAuBO,SAAxB,CAAiCN,MALrC,SAAyBA,GACvBK,GAAe,kBAAML,MAInB,SACGE,MCrBF,IAAMK,EAAuBV,IAAMC,cAAc,IAC3CU,EAA6BX,IAAMC,eAC9C,SAACE,OAWY,SAASS,EAAT,GAA6D,IAA5BP,EAA2B,EAA3BA,SAC9C,EAA0CC,mBACxC,6BADF,mBAAOO,EAAP,KAAsBC,EAAtB,KAMA,OACE,cAACJ,EAAqBD,SAAtB,CAA+BN,MAAOU,EAAtC,SACE,cAACF,EAA2BF,SAA5B,CAAqCN,MALzC,SAA6BA,GAC3BW,GAAiB,kBAAMX,MAIrB,SACGE,MCvBF,IAAMU,EAAef,IAAMC,eAAc,GACnCe,EAAqBhB,IAAMC,eAAc,eAE/C,SAASgB,IACd,OAAOC,qBAAWH,GAOL,SAASI,EAAT,GAAqD,IAA5Bd,EAA2B,EAA3BA,SACtC,EAA8BC,oBAAS,GAAvC,mBAAOc,EAAP,KAAgBC,EAAhB,KAKA,OACE,cAACN,EAAaN,SAAd,CAAuBN,MAAOiB,EAA9B,SACE,cAACJ,EAAmBP,SAApB,CAA6BN,MANjC,WACEkB,GAAW,SAACC,GAAD,OAAcA,MAKvB,SACGjB,MCbM,SAASkB,IACtB,MAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAAkCnB,oBAAS,GAA3C,mBAAOoB,EAAP,KAAkBC,EAAlB,KACA,EAAgCrB,mBAAS,IAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KACA,EAA0BvB,qBAA1B,mBAAOwB,EAAP,KAAcC,EAAd,KACA,EAAoBzB,mBAClB,wDADF,mBAAO0B,EAAP,KAAWC,EAAX,KAIAC,qBAAU,WAAM,4CACd,4BAAA3C,EAAA,sEAC2BC,GAAe2C,aAD1C,OACMC,EADN,OAEEX,GAAS,kBAAMW,KAFjB,4CADc,uBAAC,WAAD,wBAMdD,KACC,IAEH,IAAM3B,EHfCU,qBAAWhB,GGgBZY,EFhBCI,qBAAWP,GEiBZS,EAAUH,IAEhB,SAAS9B,EAAU2C,GACjBC,GAAS,kBAAMD,KACfH,GAAa,kBAAM,KACnBb,EAAiB,aAAD,OAAcgB,EAAMO,QActC,OACE,qBAAKC,GAAG,SAASC,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAT,MAAzC,SACE,sBAAKM,GAAG,QAAR,UACGd,EAAMiB,KAAI,SAACtC,GAAD,OACT,cAAClB,EAAD,CACEI,QAAS,kBAAMwC,EAAY1B,IAC3BjB,KAAMiB,EACNhB,UAAWA,EAEXC,WAAYwC,IAAazB,GADpBA,MAIT,cAAC,IAAD,CACEb,UAAU,eACVoD,QAAS,WACP5B,EAAiB,wBAAkBgB,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOO,QA3BpD,SAAuBM,GACrB,IAAIC,EAAQ,IAAIC,MAChBD,EAAME,IAAN,iCAAsCH,EAAtC,sBACAC,EAAMG,OAAS,WACTH,EAAMI,MAAQ,IAChBf,EAAMW,EAAME,KAEZb,EAAM,0BAAD,OAA2BU,EAA3B,oBAqBDM,CAAa,OAACnB,QAAD,IAACA,OAAD,EAACA,EAAOoB,OAEvBC,QAAS,kBACPrC,EAAiB,kDAEnBsC,SAAU,kBAAM5C,GAAe,IAC/B6C,YAAa,kBAAM7C,GAAe,IAClC8C,QAAS5B,EACT6B,MAAOnC,EACPoC,UAAU,EACVC,UAAU,EACVC,IAAG,iDAAqC5B,QAArC,IAAqCA,OAArC,EAAqCA,EAAOoB,MAC/CS,MAAM,EACNC,OAAQ,CACNC,WAAY,CACVC,OAAQ,QACRd,MAAO,QACPe,GAAI,iB,mBCnFGC,EAMnB,WAAYC,EAAgBf,EAAcb,EAAeC,GAAa,yBALtE2B,YAKqE,OAJrEf,UAIqE,OAHrEb,WAGqE,OAFrEC,QAEqE,EACnE4B,KAAKD,OAASA,EACdC,KAAKhB,KAAOA,EACZgB,KAAK7B,MAAQA,EACb6B,KAAK5B,GAAKA,G,cCRP,SAAS6B,IACd,OACE,qBAAK7E,UAAU,mBAAf,SACE,qBAAKA,UAAU,kB,MCAN,SAAS8E,IACtB,IAAM7D,ENICW,qBAAWnB,GMHZsE,ELGCnD,qBAAWR,GKDlB,OACE,uBAAM4B,GAAG,mBAAT,UACG+B,EACA9D,EAAc,cAAC4D,EAAD,IAAiB,MCZvB,UAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,oC,MCWlC,SAASG,EAAT,GAMK,IALVjF,EAKS,EALTA,QACAkF,EAIS,EAJTA,UACAC,EAGS,EAHTA,KACAC,EAES,EAFTA,KACAnF,EACS,EADTA,UAEA,OACE,uBACEA,UAAS,sBAAiBA,GAC1B+C,MAAOmC,EACPnF,QAAS,SAACqF,GAAD,OAAWrF,EAAQqF,IAH9B,UAKGH,EACC,cAACJ,EAAD,IAEA,qBAAKrB,IAAK2B,EAAME,IAAKH,EAAMlF,UAAU,gBAEvC,+BAAKkF,EAAL,U,UCzBOI,EAAsB5E,IAAMC,eAAc,GAC1C4E,EAA4B7E,IAAMC,eAAc,eAEtD,SAAS6E,IACd,OAAO5D,qBAAW0D,GAGb,SAASG,IACd,OAAO7D,qBAAW2D,GAGL,SAASG,EAAT,GAA4D,IAA5B3E,EAA2B,EAA3BA,SAC7C,EAA4BC,oBAAS,GAArC,mBAAO2E,EAAP,KAAeC,EAAf,KAKA,OACE,cAACN,EAAoBnE,SAArB,CAA8BN,MAAO8E,EAArC,SACE,cAACJ,EAA0BpE,SAA3B,CAAoCN,MANxC,WACE+E,GAAU,SAAC5D,GAAD,OAAcA,MAKtB,SACGjB,MCXM,SAAS8E,IACtB,IAAMC,EVFClE,qBAAWF,GUGZI,EAAUH,IAEVoE,EAAgBN,IAChBO,EAAiBR,IACvB,OACE,sBAAKxC,GAAG,WAAWhD,UAAWgG,EAAiB,aAAe,GAA9D,UACE,cAAChB,EAAD,CACEjF,QAAS,kBAAM+F,KACfb,WAAW,EACXE,KAAMrD,EAAUmE,EAAOC,EACvBlG,UAAU,gBAEZ,cAACgF,EAAD,CACEjF,QAAS,kBAAMgG,KACfd,WAAW,EACXE,KAAMgB,EACNnG,UAAU,mB,6BC7BGoG,EAMnB,WACEC,EACAC,EACAtD,EACAuD,GACC,yBAVHF,UAUE,OATFC,cASE,OARFtD,QAQE,OAPFuD,YAOE,EACA3B,KAAKyB,KAAOA,EACZzB,KAAK0B,SAAWA,EAChB1B,KAAK2B,OAASA,EACd3B,KAAK5B,GAAKA,GCVDwD,EAAc9F,IAAMC,cAAc,IAClC8F,EAAoB/F,IAAMC,eACrC,SAACE,OAWY,SAAS6F,EAAT,GAAoD,IAA5B3F,EAA2B,EAA3BA,SACrC,EAAwBC,mBAAS,IAAjC,mBAAO2F,EAAP,KAAaC,EAAb,KACA,SAASC,EAAWF,GAEhBC,EADW,OAATD,EAEA,kBAAM,IAAIP,EAAcO,EAAKG,YAAcH,EAAKI,SAAWJ,EAAKK,MAG1D,iBAAO,KAanB,OATApE,qBAAU,WAMR,OALoBqE,GAAqBC,KAAKC,oBAC5C,SAACR,GACCE,EAAWF,QAId,IAGD,cAACH,EAAYrF,SAAb,CAAsBN,MAAO8F,EAA7B,SACE,cAACF,EAAkBtF,SAAnB,CAA4BN,MAAOgG,EAAnC,SACG9F,M,qBCpCT,SAASqG,EAAT,GAAiE,IAA5CjC,EAA2C,EAA3CA,KAAMJ,EAAqC,EAArCA,QAASsC,EAA4B,EAA5BA,SAClCC,IAAKC,MAAM,CACTC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAK,OAAEN,QAAF,IAAEA,IAAY,IACnBO,kBAAkB,EAElBC,QAAS,SAACL,GACRA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,gBAE3CC,KAAK,CACN9C,KAAMA,EACNpC,MAAOgC,I,IAUUmD,E,kCAAAA,EACZC,WAAa,SAACpD,EAAiBsC,GACpCD,EAAU,CACRjC,KAAM,QACNJ,QAASA,EACTsC,SAAUA,KALKa,EASZE,UAAY,SAACrD,EAAiBsC,GACnCD,EAAU,CACRjC,KAAM,OACNJ,QAASA,EACTsC,SAAUA,KAbKa,EAiBZG,eAAiB,SACtBC,EACAC,GAEAjB,IAAKW,KAAK,CACR9C,KAAM,WACNpC,MAAOuF,EACPE,MAAO,OACPC,kBAAkB,IACjBC,MAAK,SAAC7H,GACHA,EAAM8H,aACRJ,EAAU1H,EAAMA,WA5BHqH,EAiCZU,aAAe,SAAC7D,EAAiBsC,GACtCD,EAAU,CACRjC,KAAM,UACNJ,QAASA,EACTsC,SAAUA,KArCKa,EAyCZW,cAAgB,YAII,IAHzBP,EAGwB,EAHxBA,SACAC,EAEwB,EAFxBA,UACAO,EACwB,EADxBA,mBAEAxB,IAAKW,KAAK,CACR9C,KAAM,WACNpC,MAAOuF,EACPG,kBAAkB,EAClBK,mBAAkB,OAAEA,QAAF,IAAEA,IAAsB,QACzCJ,MAAK,SAAC7H,GACHA,EAAM8H,aACRJ,QArDaL,EA0DZa,QAAU,SAAC/F,GAChB,OAAOgG,SAASC,eAAejG,IA3DdkF,EA6DZgB,YAAc,SAAClG,GACpB,OAAQgG,SAASC,eAAejG,GAA0BnC,O,UC1C/CsI,EA3CWC,sBACxB,WAAkBC,GAAS,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MACP,EAA0CvI,oBAAS,GAAnD,mBAAOwI,EAAP,KAAsBC,EAAtB,KAEA,OACE,sBAAKzJ,UAAU,cAAf,UACE,uBAAOA,UAAU,QAAQ0J,QAASH,EAAlC,SACGA,IAEO,aAATD,EACC,qCACE,uBACEtJ,UAAU,QACVsJ,KAAME,EAAgB,OAAS,WAC/BzG,MAAOwG,EACPlD,KAAMkD,EACNF,IAAKA,IAEP,sBAAKrJ,UAAU,WAAf,UACE,uBAAOA,UAAU,QAAjB,2BACA,uBACEsJ,KAAK,WACLK,SAAU,SAAC9I,GACT4I,GAAiB,kBAAM5I,EAAM+I,OAAOC,oBAM5C,uBACE7J,UAAU,QACVqJ,IAAKA,EACLC,KAAMA,EACNvG,MAAOwG,EACPlD,KAAMkD,EACNO,aAAa,aC5CV,I,MAAA,IAA0B,mCCS1B,SAASC,KACtB,MAA8B/I,oBAAS,GAAvC,mBAAOgJ,EAAP,KAAgBC,EAAhB,KACA,EAAwCjJ,oBAAS,GAAjD,mBAAOkJ,EAAP,KAAqBC,EAArB,KAEMC,EAAWC,sBACXC,EAAcD,sBALgB,SAOrBE,IAPqB,2EAOpC,4BAAAtK,EAAA,yDACkC,KAA5BmK,EAASpI,QAASnB,OAA+C,KAA/ByJ,EAAYtI,QAASnB,MAD7D,yCAEWqH,EAAQE,UAAU,2BAF7B,UAIO8B,EAJP,oBAKIC,GAAgB,GALpB,UAOMH,EAPN,iCAQgB/C,GAAqBuD,MACzBJ,EAASpI,QAASnB,MAClByJ,EAAYtI,QAASnB,OAVjC,gDAYgBoG,GAAqBwD,OACzBL,EAASpI,QAASnB,MAClByJ,EAAYtI,QAASnB,OAdjC,QAgBMqH,EAAQU,aAAa,0BAhB3B,kDAkBU8B,EAAe,KAAWC,KAC9BzC,EAAQC,WACNuC,EAAaE,UACXF,EAAaG,QAAQ,KAAO,EAC5BH,EAAalK,SAGjB2J,GAAgB,GAzBtB,2DAPoC,sBAqCpC,IAAIpH,EAAQiH,EAAU,QAAU,UAE5Bc,EAAiBZ,EAAe,iBAAmB,YAEvD,OACE,sBAAKlK,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,SAAuB+C,IACvB,cAAC,EAAD,CAAYuG,KAAK,QAAQC,MAAM,QAAQF,IAAKe,IAC5C,cAAC,EAAD,CAAYd,KAAK,WAAWC,MAAM,WAAWF,IAAKiB,IACjDN,EACC,oBACEhK,UAAW8K,EACX/K,QAAS,WACP,IAAKmK,EAAc,CACjB,IAAIa,EAAWC,OAAOC,OACd,OAARF,QAAQ,IAARA,KAAU/B,SAASkC,MACjB,+GANR,8BAcA,GAEF,cAAClG,EAAD,CACEG,KAAMqF,GACNvF,UAAWiF,EACXhF,KAAMnC,EACN/C,UAAS,iBAAYkK,EAAe,kBAAoB,IACxDnK,QAAO,sBAAE,sBAAAE,EAAA,+EAAciK,EAA0B,GAAXK,KAA7B,6CAEX,oBACExK,QAAS,kBAAQmK,EAAmD,GAApCD,GAAW,SAACjI,GAAD,OAAcA,MACzDhC,UAAW8K,EAFb,SAIGd,EAAU,UAAY,sCCnFhB,WAA0B,qCCA1B,OAA0B,mCCA1B,OAA0B,yCCApBmB,I,MAKnB,WAAYC,EAAiB/E,EAAcrD,GAAa,yBAJxDoI,aAIuD,OAHvD/E,UAGuD,OAFvDrD,QAEuD,EACrD4B,KAAKwG,QAAUA,EACfxG,KAAKyB,KAAOA,EACZzB,KAAK5B,GAAKA,ICWC,SAASqI,KAAW,IAAD,EAC1B1F,EAASH,IAETmB,ETTC/E,qBAAW4E,GSWlB,QAAkB8E,IAAd3E,EAAKN,KACP,OAAO,cAACkF,GAAD,IAGT,IAAMC,EAAU,IAAIL,GAAMM,GAAa,aAAc,gBAErD,OACE,cAAC,IAAD,CACE9F,OAAQA,EACR+F,aAAa,EACb1L,UAAU,gBACV2L,iBAAiB,UAJnB,SAME,sBAAK3L,UAAU,eAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBACEwD,IAAG,UACDmD,EAAKL,gBADJ,QAED,iNAEFjB,IAAI,aACJrF,UAAU,eAEZ,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAIA,UAAU,YAAd,UAA2B2G,EAAKN,KAAhC,YACA,sBAAKrG,UAAU,WAAf,UACE,6CACA,qBAAKwD,IAAKoI,GAAUvG,IAAI,GAAGrF,UAAU,wBAGzC,qBAAKA,UAAU,cAAf,SACG,CAACwL,EAASA,EAASA,GAASrI,KAC3B,SAAC0I,EAAcC,GACb,OACE,qBACE9L,UAAU,QACVwD,IAAKqI,EAAMT,QACX/F,IAAKwG,EAAMxF,KACXtD,MAAO8I,EAAMxF,MACRwF,EAAM7I,GAAK8I,cAQ9B,cAAC9G,EAAD,CACEG,KAAM4G,GACN9G,WAAW,EACXC,KAAK,SACLlF,UAAU,SACVD,QAAS,SAACiM,GACRA,EAAEC,iBACF,IACEC,YAAQjF,GAAqBC,MAC7BgB,EAAQU,aAAa,2BACrB,MAAOoD,GACP,IAAItB,EAAgBsB,EAAUrB,KAC9BzC,EAAQC,WACNuC,EAAaE,UACXF,EAAaG,QAAQ,KAAO,EAC5BH,EAAalK,kBAW/B,SAAS+K,KACP,IAAM5F,EAASH,IACT2G,EAAc1G,IAEpB,OACE,cAAC,IAAD,CACEE,OAAQA,EACR+F,aAAa,EACb1L,UAAU,cACV2L,iBAAiB,UACjBS,2BAA2B,EAC3BC,kBAAkB,EAClBC,eAAgB,kBAAMH,KAPxB,SASE,cAACpC,GAAD,M,aChGO9C,GAAuB,ICGlC,WAAYsF,GAAgC,IAAD,gCAV3CrF,UAU2C,OARpCuD,OAAS,SAAC+B,EAAeC,GAC9B,OAAOC,aAA+B,EAAKxF,KAAMsF,EAAOC,IAOf,KAJpCjC,MAAQ,SAACgC,EAAeC,GAC7B,OAAOE,aAA2B,EAAKzF,KAAMsF,EAAOC,IAIpD7H,KAAKsC,KAAO0F,aAAQL,GDJY,CAClCM,YAAc,CACZC,OAAQC,0CACRC,WAAYD,6BACZE,UAAWF,aACXG,cAAeH,yBACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,kBAIN7M,GAAiB,I,iDEvB5BoN,UAAYC,c,KAELpN,W,uCAAa,WAAOP,GAAP,iBAAAK,EAAA,sEACUuN,YAAQC,YAAW,EAAKH,UAAW1N,IAD7C,cACZ8N,EADY,OAEdC,EAAsB,GAC1BD,EAAcE,SAAQ,SAACC,GACrB,IAAIC,EAAOD,EAAIC,OACfH,EAAMI,KAAK,IAAIrJ,EAAMoJ,EAAKnJ,OAAQmJ,EAAKlK,KAAMkK,EAAK/K,MAAO8K,EAAI7K,QAL7C,kBAOX2K,GAPW,2C,2DAUb9K,W,sBAAa,8BAAA5C,EAAA,sEACUuN,YAAQC,YAAW,EAAKH,UAAW,UAD7C,cACZI,EADY,OAEdC,EAAuB,GAC3BD,EAAcE,SAAQ,SAACC,GACrB,IAAIC,EAAOD,EAAIC,OACfH,EAAMI,KAAKD,EAAKzH,SALA,kBAOXsH,GAPW,4CFkCPK,OArBf,WACE,OACE,qBAAKhL,GAAG,MAAR,SACE,cAAClC,EAAD,UACE,eAACQ,EAAD,WACE,cAACO,EAAD,UACE,cAAC,EAAD,UACE,eAAC6E,EAAD,WACE,cAACb,EAAD,IACA,cAAC5D,EAAD,IACA,cAACoJ,GAAD,WAIN,cAACvG,EAAD,YG9BKmJ,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBzF,MAAK,YAAkD,IAA/C0F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF3F,SAASC,eAAe,SAM1BgF,O","file":"static/js/main.12e1009a.chunk.js","sourcesContent":["import { fireBaseHelper } from \"../../App\";\nimport Music from \"../../types/music\";\n\ninterface _props {\n  mood: string;\n  playMusic: (music: Music) => void;\n  isSelected: boolean;\n  onClick: () => void;\n}\nexport default function Mood({ mood, playMusic, isSelected, onClick }: _props) {\n  return (\n    <div\n      className={`mood ${isSelected ? \"active\" : \"\"}`}\n      onClick={async () => {\n        onClick();\n        let musicList: Array<Music> = await fireBaseHelper.fetchMusic(mood);\n        playMusic(\n          musicList[Math.floor(Math.random() * (musicList.length - 0))]\n        );\n      }}\n    >\n      {mood}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { providerProps } from \"../types/interfaces\";\n\nexport const BufferingContext = React.createContext(false);\nexport const BufferingContextUpdate = React.createContext(\n  (value: boolean) => {}\n);\n\nexport function useBuffering() {\n  return useContext(BufferingContext);\n}\n\nexport function useBufferingUpdate() {\n  return useContext(BufferingContextUpdate);\n}\n\nexport default function BufferingProvider({ children }: providerProps) {\n  const [isBuffering, setIsBuffering] = useState(false);\n  function toggleBuffering(value: boolean) {\n    setIsBuffering(() => value);\n  }\n  return (\n    <BufferingContext.Provider value={isBuffering}>\n      <BufferingContextUpdate.Provider value={toggleBuffering}>\n        {children}\n      </BufferingContextUpdate.Provider>\n    </BufferingContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { providerProps } from \"../types/interfaces\";\n\nexport const BottomMessageContext = React.createContext(\"\");\nexport const BottomMessageContextUpdate = React.createContext(\n  (value: string) => {}\n);\n\nexport function useBottomMessage() {\n  return useContext(BottomMessageContext);\n}\n\nexport function useBottomMessageUpdate() {\n  return useContext(BottomMessageContextUpdate);\n}\n\nexport default function BottomMessageProvider({ children }: providerProps) {\n  const [bottomMessage, setBottomMessage] = useState(\n    \"Hello, How are you today?\"\n  );\n  function updateBottomMessage(value: string) {\n    setBottomMessage(() => value);\n  }\n  return (\n    <BottomMessageContext.Provider value={bottomMessage}>\n      <BottomMessageContextUpdate.Provider value={updateBottomMessage}>\n        {children}\n      </BottomMessageContextUpdate.Provider>\n    </BottomMessageContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { providerProps } from \"../types/interfaces\";\n\nexport const MutedContext = React.createContext(false);\nexport const MutedContextUpdate = React.createContext(() => {});\n\nexport function useMuted() {\n  return useContext(MutedContext);\n}\n\nexport function useMutedUpdate() {\n  return useContext(MutedContextUpdate);\n}\n\nexport default function MutedProvider({ children }: providerProps) {\n  const [isMuted, setIsMuted] = useState(false);\n  function toggleMuted() {\n    setIsMuted((current) => !current);\n  }\n\n  return (\n    <MutedContext.Provider value={isMuted}>\n      <MutedContextUpdate.Provider value={toggleMuted}>\n        {children}\n      </MutedContextUpdate.Provider>\n    </MutedContext.Provider>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport Music from \"../../types/music\";\nimport Mood from \"./mood\";\nimport \"./moods.scss\";\n\nimport { fireBaseHelper } from \"../../App\";\nimport { useBufferingUpdate } from \"../../global-state/buffering-provider\";\nimport { useBottomMessageUpdate } from \"../../global-state/bottom-message-provider\";\nimport { useMuted } from \"../../global-state/muted-provider\";\n\nexport default function Moods() {\n  const [moods, setMoods] = useState([] as Array<string>);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [selected, setSelected] = useState(\"\");\n  const [music, setMusic] = useState<Music>();\n  const [bg, setBg] = useState(\n    \"https://i.ytimg.com/vi/_ITiwPMUzho/maxresdefault.jpg\"\n  );\n\n  useEffect(() => {\n    async function fetchMoods() {\n      let fetchedMoods = await fireBaseHelper.fetchMoods();\n      setMoods(() => fetchedMoods);\n    }\n\n    fetchMoods();\n  }, []);\n\n  const setIsBuffering = useBufferingUpdate();\n  const setBottomMessage = useBottomMessageUpdate();\n  const isMuted = useMuted();\n\n  function playMusic(music: Music) {\n    setMusic(() => music);\n    setIsPlaying(() => true);\n    setBottomMessage(`Fetching: ${music.title}`);\n  }\n  function checkAndSetBg(musicId?: string) {\n    let image = new Image();\n    image.src = `https://i.ytimg.com/vi/${musicId}/maxresdefault.jpg`;\n    image.onload = function () {\n      if (image.width > 120) {\n        setBg(image.src);\n      } else {\n        setBg(`https://i.ytimg.com/vi/${musicId}/hqdefault.jpg`);\n      }\n    };\n  }\n\n  return (\n    <div id=\"parent\" style={{ backgroundImage: `url(${bg})` }}>\n      <div id=\"moods\">\n        {moods.map((value) => (\n          <Mood\n            onClick={() => setSelected(value)}\n            mood={value}\n            playMusic={playMusic}\n            key={value}\n            isSelected={selected === value}\n          ></Mood>\n        ))}\n        <ReactPlayer\n          className=\"react-player\"\n          onStart={() => {\n            setBottomMessage(\"Now Playing: \" + music?.title);\n            checkAndSetBg(music?.link);\n          }}\n          onError={() =>\n            setBottomMessage(\"Something went wrong while fetching the music\")\n          }\n          onBuffer={() => setIsBuffering(true)}\n          onBufferEnd={() => setIsBuffering(false)}\n          playing={isPlaying}\n          muted={isMuted}\n          controls={true}\n          autoPlay={true}\n          url={`https://www.youtube.com/watch?v=${music?.link}`}\n          loop={true}\n          config={{\n            playerVars: {\n              height: \"144px\",\n              width: \"256px\",\n              vq: \"small\",\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","export default class Music {\n  artist: string;\n  link: string;\n  title: string;\n  id: string;\n\n  constructor(artist: string, link: string, title: string, id: string) {\n    this.artist = artist;\n    this.link = link;\n    this.title = title;\n    this.id = id;\n  }\n}\n","import \"./loader.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\" />\n    </div>\n  );\n}\n","import { useBottomMessage } from \"../../global-state/bottom-message-provider\";\nimport { useBuffering } from \"../../global-state/buffering-provider\";\nimport { MiniLoader } from \"../misc/loader/loader\";\nimport \"./bottom-indicator.scss\";\n\nexport default function BottomIndicator() {\n  const isBuffering = useBuffering();\n  const message = useBottomMessage();\n\n  return (\n    <span id=\"bottom-indicator\">\n      {message}\n      {isBuffering ? <MiniLoader /> : \"\"}\n    </span>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/mute.d7f38ca3.svg\";","export default __webpack_public_path__ + \"static/media/unMute.8a278345.svg\";","export default __webpack_public_path__ + \"static/media/profile.d4070b52.svg\";","import { MiniLoader } from \"../loader/loader\";\n\nimport \"./icon-button.scss\";\n\ninterface _props {\n  onClick: (event?: any) => any;\n  isLoading: boolean;\n  text?: string;\n  icon: string;\n  className?: string;\n}\nexport function IconButton({\n  onClick,\n  isLoading,\n  text,\n  icon,\n  className,\n}: _props) {\n  return (\n    <span\n      className={`icon-button ${className}`}\n      title={text}\n      onClick={(event) => onClick(event)}\n    >\n      {isLoading ? (\n        <MiniLoader />\n      ) : (\n        <img src={icon} alt={text} className=\"button-icon\" />\n      )}\n      <h4>{text} </h4>\n    </span>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { providerProps } from \"../types/interfaces\";\n\nexport const ModalProfileContext = React.createContext(false);\nexport const ModalProfileContextUpdate = React.createContext(() => {});\n\nexport function useModalProfile() {\n  return useContext(ModalProfileContext);\n}\n\nexport function useModalProfileUpdate() {\n  return useContext(ModalProfileContextUpdate);\n}\n\nexport default function ModalProfileProvider({ children }: providerProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  function toggleModalProfile() {\n    setIsOpen((current) => !current);\n  }\n\n  return (\n    <ModalProfileContext.Provider value={isOpen}>\n      <ModalProfileContextUpdate.Provider value={toggleModalProfile}>\n        {children}\n      </ModalProfileContextUpdate.Provider>\n    </ModalProfileContext.Provider>\n  );\n}\n","import mute from \"../../assets/mute.svg\";\nimport unMute from \"../../assets/unMute.svg\";\nimport profile from \"../../assets/profile.svg\";\n\nimport { useMuted, useMutedUpdate } from \"../../global-state/muted-provider\";\nimport { IconButton } from \"../misc/icon-button/icon-button\";\n\nimport \"./controls.scss\";\nimport {\n  useModalProfile,\n  useModalProfileUpdate,\n} from \"../../global-state/profile-modal-provider\";\n\nexport default function Controls() {\n  const toggleMuted = useMutedUpdate();\n  const isMuted = useMuted();\n\n  const toggleProfile = useModalProfileUpdate();\n  const profileToggled = useModalProfile();\n  return (\n    <div id=\"controls\" className={profileToggled ? \"box-shadow\" : \"\"}>\n      <IconButton\n        onClick={() => toggleMuted()}\n        isLoading={false}\n        icon={isMuted ? mute : unMute}\n        className=\"mute-button\"\n      />\n      <IconButton\n        onClick={() => toggleProfile()}\n        isLoading={false}\n        icon={profile}\n        className=\"mute-button\"\n      />\n    </div>\n  );\n}\n","import Badge from \"./badge\";\n\nexport default class LofiMoodsUser {\n  name: string;\n  imagesrc: string;\n  id: string;\n  badges?: Array<Badge>;\n\n  constructor(\n    name: string,\n    imagesrc: string,\n    id: string,\n    badges?: Array<Badge>\n  ) {\n    this.name = name;\n    this.imagesrc = imagesrc;\n    this.badges = badges;\n    this.id = id;\n  }\n}\n","import { User } from \"firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { authenticationHelper } from \"../App\";\nimport { providerProps } from \"../types/interfaces\";\nimport LofiMoodsUser from \"../types/user\";\n\nexport const UserContext = React.createContext({} as LofiMoodsUser);\nexport const UserContextUpdate = React.createContext(\n  (value: User | null) => {}\n);\n\nexport function useUser() {\n  return useContext(UserContext);\n}\n\nexport function useUserUpdate() {\n  return useContext(UserContextUpdate);\n}\n\nexport default function UserProvider({ children }: providerProps) {\n  const [user, setUser] = useState({} as LofiMoodsUser);\n  function updateUser(user: User | null) {\n    if (user !== null) {\n      setUser(\n        () => new LofiMoodsUser(user.displayName!, user.photoURL!, user.uid)\n      );\n    } else {\n      setUser(() => ({} as LofiMoodsUser));\n    }\n  }\n\n  useEffect(() => {\n    const unsubscribe = authenticationHelper.auth.onAuthStateChanged(\n      (user: User | null) => {\n        updateUser(user);\n      }\n    );\n    return unsubscribe;\n  }, []);\n\n  return (\n    <UserContext.Provider value={user}>\n      <UserContextUpdate.Provider value={updateUser}>\n        {children}\n      </UserContextUpdate.Provider>\n    </UserContext.Provider>\n  );\n}\n","import Swal, { SweetAlertIcon } from \"sweetalert2\";\n\ninterface fireToastProps {\n  message: string;\n  icon: SweetAlertIcon;\n  duration?: number;\n}\n\nfunction fireToast({ icon, message, duration }: fireToastProps) {\n  Swal.mixin({\n    toast: true,\n    position: \"top-end\",\n    showConfirmButton: false,\n    timer: duration ?? 3000,\n    timerProgressBar: true,\n\n    didOpen: (toast) => {\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n    },\n  }).fire({\n    icon: icon,\n    title: message,\n  });\n}\n\ninterface confirmDialogProps {\n  question: string;\n  onConfirm: () => void;\n  confirmButtonColor?: string;\n}\n\nexport default class Helpers {\n  static errorToast = (message: string, duration?: number) => {\n    fireToast({\n      icon: \"error\",\n      message: message,\n      duration: duration,\n    });\n  };\n\n  static infoToast = (message: string, duration?: number) => {\n    fireToast({\n      icon: \"info\",\n      message: message,\n      duration: duration,\n    });\n  };\n\n  static textInputAlert = (\n    question: string,\n    onConfirm: (value: any) => void\n  ) => {\n    Swal.fire({\n      icon: \"question\",\n      title: question,\n      input: \"text\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        onConfirm(value.value);\n      }\n    });\n  };\n\n  static successToast = (message: string, duration?: number) => {\n    fireToast({\n      icon: \"success\",\n      message: message,\n      duration: duration,\n    });\n  };\n\n  static confirmDialog = ({\n    question,\n    onConfirm,\n    confirmButtonColor,\n  }: confirmDialogProps) => {\n    Swal.fire({\n      icon: \"question\",\n      title: question,\n      showCancelButton: true,\n      confirmButtonColor: confirmButtonColor ?? \"red\",\n    }).then((value) => {\n      if (value.isConfirmed) {\n        onConfirm();\n      }\n    });\n  };\n\n  static getById = (id: string) => {\n    return document.getElementById(id);\n  };\n  static inputGetter = (id: string) => {\n    return (document.getElementById(id) as HTMLInputElement)!.value;\n  };\n}\n","import { forwardRef } from \"react\";\nimport { useState } from \"react\";\nimport \"./input-field.scss\";\n\ninterface _props {\n  type: string;\n  label: string;\n}\n\nexport const InputField = forwardRef<HTMLInputElement, _props>(\n  ({ type, label }, ref) => {\n    const [passwordShown, setPasswordShown] = useState(false);\n\n    return (\n      <div className=\"input-field\">\n        <label className=\"label\" htmlFor={label}>\n          {label}\n        </label>\n        {type === \"password\" ? (\n          <>\n            <input\n              className=\"input\"\n              type={passwordShown ? \"text\" : \"password\"}\n              title={label}\n              name={label}\n              ref={ref}\n            />\n            <div className=\"checkbox\">\n              <label className=\"label\">Show Password</label>\n              <input\n                type=\"checkbox\"\n                onChange={(value) => {\n                  setPasswordShown(() => value.target.checked);\n                }}\n              />\n            </div>\n          </>\n        ) : (\n          <input\n            className=\"input\"\n            ref={ref}\n            type={type}\n            title={label}\n            name={label}\n            autoComplete=\"on\"\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default InputField;\n","export default __webpack_public_path__ + \"static/media/login.e2edf9d9.svg\";","import { createRef, useState } from \"react\";\nimport { authenticationHelper } from \"../../App\";\nimport { IconButton } from \"../misc/icon-button/icon-button\";\nimport InputField from \"../misc/input-field/input-field\";\nimport \"./login-signup.scss\";\n\nimport login from \"../../assets/login.svg\";\nimport Helpers from \"../../helpers/helpers\";\n\nexport default function LoginSignup() {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const emailRef = createRef<HTMLInputElement>();\n  const passwordRef = createRef<HTMLInputElement>();\n\n  async function submit() {\n    if (emailRef.current!.value === \"\" || passwordRef.current!.value === \"\") {\n      return Helpers.infoToast(\"Fill in all the fields\");\n    }\n    if (!isSubmitting) {\n      setIsSubmitting(true);\n      try {\n        isLogin\n          ? await authenticationHelper.login(\n              emailRef.current!.value,\n              passwordRef.current!.value\n            )\n          : await authenticationHelper.signup(\n              emailRef.current!.value,\n              passwordRef.current!.value\n            );\n        Helpers.successToast(\"Logged in successfully\");\n      } catch (e) {\n        let errorMessage = (e as any).code;\n        Helpers.errorToast(\n          errorMessage.substring(\n            errorMessage.indexOf(\"/\") + 1,\n            errorMessage.length\n          )\n        );\n        setIsSubmitting(false);\n      }\n    }\n  }\n\n  let title = isLogin ? \"Login\" : \"Sign Up\";\n\n  let clickableClass = isSubmitting ? \"hover-disabled\" : \"clickable\";\n\n  return (\n    <div className=\"form\">\n      <h1 className=\"title\">{title}</h1>\n      <InputField type=\"email\" label=\"Email\" ref={emailRef} />\n      <InputField type=\"password\" label=\"Password\" ref={passwordRef} />\n      {isLogin ? (\n        <h4\n          className={clickableClass}\n          onClick={() => {\n            if (!isSubmitting) {\n              let remember = window.open();\n              remember?.document.write(\n                \"<h1>This part is still under construction, in the meantime, Try to remember it ,C'mon you can do it!</h1>\"\n              );\n            }\n          }}\n        >\n          Forgot password?\n        </h4>\n      ) : (\n        \"\"\n      )}\n      <IconButton\n        icon={login}\n        isLoading={isSubmitting}\n        text={title}\n        className={`button ${isSubmitting ? \"disabled-button\" : \"\"}`}\n        onClick={async () => (!isSubmitting ? submit() : \"\")}\n      />\n      <h4\n        onClick={() => (!isSubmitting ? setIsLogin((current) => !current) : \"\")}\n        className={clickableClass}\n      >\n        {isLogin ? \"Sign up\" : \"Already have an account? Login\"}\n      </h4>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/verified.1b7256e8.svg\";","export default __webpack_public_path__ + \"static/media/logout.4442e419.svg\";","export default __webpack_public_path__ + \"static/media/sample_badge.984dd7be.png\";","export default class Badge {\n  iconsrc: string;\n  name: string;\n  id: string;\n\n  constructor(iconsrc: string, name: string, id: string) {\n    this.iconsrc = iconsrc;\n    this.name = name;\n    this.id = id;\n  }\n}\n","import { signOut } from \"@firebase/auth\";\nimport Modal from \"react-modal\";\nimport { authenticationHelper } from \"../../App\";\nimport {\n  useModalProfile,\n  useModalProfileUpdate,\n} from \"../../global-state/profile-modal-provider\";\nimport { useUser } from \"../../global-state/user-provider\";\nimport Helpers from \"../../helpers/helpers\";\nimport LoginSignup from \"../login-signup/login-signup\";\n\nimport verified from \"../../assets/verified.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport sampleBadge from \"../../assets/sample_badge.png\";\n\nimport \"./profile.scss\";\nimport { IconButton } from \"../misc/icon-button/icon-button\";\nimport Badge from \"../../types/badge\";\n\nexport default function Profile() {\n  const isOpen = useModalProfile();\n\n  const user = useUser();\n\n  if (user.name === undefined) {\n    return <LoginModal />;\n  }\n\n  const myBadge = new Badge(sampleBadge, \"Gold badge\", \"sample_badge\");\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      ariaHideApp={false}\n      className=\"profile-modal\"\n      overlayClassName=\"overlay\"\n    >\n      <div className=\"profile-card\">\n        <div className=\"user-card\">\n          <img\n            src={\n              user.imagesrc ??\n              \"https://camo.githubusercontent.com/4da3943d17cbd884c4da4c39a9d5e11ad2fa9dac39f7cbf5867c24ff05411f61/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f567577396d35775876694649512f67697068792e676966\"\n            }\n            alt=\"user_image\"\n            className=\"user-image\"\n          />\n          <div className=\"user-details\">\n            <div className=\"user-status\">\n              <h1 className=\"user-name\">{user.name}jerome</h1>\n              <div className=\"verified\">\n                <span> verified</span>\n                <img src={verified} alt=\"\" className=\"verified-icon\" />\n              </div>\n            </div>\n            <div className=\"user-badges\">\n              {[myBadge, myBadge, myBadge].map(\n                (badge: Badge, index: number) => {\n                  return (\n                    <img\n                      className=\"badge\"\n                      src={badge.iconsrc}\n                      alt={badge.name}\n                      title={badge.name}\n                      key={badge.id + index}\n                    />\n                  );\n                }\n              )}\n            </div>\n          </div>\n        </div>\n        <IconButton\n          icon={logout}\n          isLoading={false}\n          text=\"Logout\"\n          className=\"logout\"\n          onClick={(e) => {\n            e.preventDefault();\n            try {\n              signOut(authenticationHelper.auth);\n              Helpers.successToast(\"Logged out successfully\");\n            } catch (e) {\n              let errorMessage = (e as any).code;\n              Helpers.errorToast(\n                errorMessage.substring(\n                  errorMessage.indexOf(\"/\") + 1,\n                  errorMessage.length\n                )\n              );\n            }\n          }}\n        />\n      </div>\n    </Modal>\n  );\n}\n\nfunction LoginModal() {\n  const isOpen = useModalProfile();\n  const toggleModal = useModalProfileUpdate();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      ariaHideApp={false}\n      className=\"login-modal\"\n      overlayClassName=\"overlay\"\n      shouldCloseOnOverlayClick={true}\n      shouldCloseOnEsc={true}\n      onRequestClose={() => toggleModal()}\n    >\n      <LoginSignup />\n    </Modal>\n  );\n}\n","import \"./App.scss\";\n\nimport Moods from \"./components/moods/moods\";\nimport FireBaseHelper from \"./helpers/FirebaseHelper\";\n\nimport { initializeApp } from \"firebase/app\";\nimport BottomIndicator from \"./components/bottom-indicator/bottom-indicator\";\nimport BufferingProvider from \"./global-state/buffering-provider\";\nimport BottomMessageProvider from \"./global-state/bottom-message-provider\";\nimport Controls from \"./components/controls/controls\";\nimport MutedProvider from \"./global-state/muted-provider\";\nimport ModalProvider from \"./global-state/profile-modal-provider\";\nimport Profile from \"./components/profile/profile\";\nimport AuthenticationHelper from \"./helpers/authentication-helper\";\nimport UserProvider from \"./global-state/user-provider\";\n\nexport const authenticationHelper = new AuthenticationHelper(\n  initializeApp({\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n  })\n);\n\nexport const fireBaseHelper = new FireBaseHelper();\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <BufferingProvider>\n        <BottomMessageProvider>\n          <MutedProvider>\n            <ModalProvider>\n              <UserProvider>\n                <Controls />\n                <Moods />\n                <Profile />\n              </UserProvider>\n            </ModalProvider>\n          </MutedProvider>\n          <BottomIndicator />\n        </BottomMessageProvider>\n      </BufferingProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { FirebaseApp } from \"@firebase/app\";\nimport {\n  Auth,\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nexport default class AuthenticationHelper {\n  auth: Auth;\n\n  public signup = (email: string, password: string) => {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  };\n\n  public login = (email: string, password: string) => {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  };\n\n  constructor(firebaseInstance: FirebaseApp) {\n    this.auth = getAuth(firebaseInstance);\n  }\n}\n","import { collection, getDocs } from \"firebase/firestore\";\nimport { getFirestore } from \"firebase/firestore\";\nimport Music from \"../types/music\";\n\nexport default class FireBaseHelper {\n  firestore = getFirestore();\n\n  public fetchMusic = async (mood: string): Promise<Array<Music>> => {\n    const querySnapshot = await getDocs(collection(this.firestore, mood));\n    let datas: Array<Music> = [];\n    querySnapshot.forEach((doc) => {\n      let data = doc.data();\n      datas.push(new Music(data.artist, data.link, data.title, doc.id));\n    });\n    return datas;\n  };\n\n  public fetchMoods = async (): Promise<Array<string>> => {\n    const querySnapshot = await getDocs(collection(this.firestore, \"moods\"));\n    let datas: Array<string> = [];\n    querySnapshot.forEach((doc) => {\n      let data = doc.data();\n      datas.push(data.name);\n    });\n    return datas;\n  };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}