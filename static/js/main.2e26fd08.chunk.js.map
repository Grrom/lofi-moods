{"version":3,"sources":["components/misc/loader/loader.tsx","components/misc/action-button/action-button.tsx","components/moods/mood.tsx","assets/mute.svg","assets/unMute.svg","components/moods/moods.tsx","types/music.ts","components/bottom-indicator/bottom-indicator.tsx","App.tsx","helpers/FirebaseHelper.ts","reportWebVitals.ts","index.tsx"],"names":["MiniLoader","className","ActionButton","onClick","isLoading","text","icon","title","src","alt","Mood","mood","playMusic","isSelected","a","fireBaseHelper","fetchMusic","musicList","Math","floor","random","length","Moods","setBottomMessage","setIsBuffering","useState","moods","setMoods","isPlaying","setIsPlaying","selected","setSelected","isMuted","setIsMuted","music","setMusic","bg","setBg","useEffect","fetchMoods","fetchedMoods","id","style","backgroundImage","current","mute","unMute","map","value","onStart","musicId","image","Image","onload","width","checkAndSetBg","link","onError","onBuffer","onBufferEnd","playing","muted","controls","autoPlay","url","loop","config","playerVars","height","vq","Music","artist","this","BottomIndicator","message","isBuffering","console","log","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getFirestore","getDocs","collection","querySnapshot","datas","forEach","doc","data","push","name","App","bottomMessage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e26fd08.chunk.js","sourcesContent":["import \"./loader.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\" />\n    </div>\n  );\n}\n","import { MiniLoader } from \"../loader/loader\";\n\nimport \"./action-button.scss\";\n\ninterface _props {\n  onClick: () => any;\n  isLoading: boolean;\n  text: string;\n  icon: string;\n  className?: string;\n}\nexport function ActionButton({\n  onClick,\n  isLoading,\n  text,\n  icon,\n  className,\n}: _props) {\n  return (\n    <span\n      className={`action-button ${className}`}\n      title={text}\n      onClick={() => {\n        onClick();\n      }}\n    >\n      {isLoading ? (\n        <MiniLoader />\n      ) : (\n        <img src={icon} alt={text} className=\"icon\" />\n      )}\n      <h4>{text} </h4>\n    </span>\n  );\n}\n","import { fireBaseHelper } from \"../../App\";\nimport { Music } from \"../../types/music\";\n\ninterface _props {\n  mood: string;\n  playMusic: (music: Music) => void;\n  isSelected: boolean;\n  onClick: () => void;\n}\nexport default function Mood({ mood, playMusic, isSelected, onClick }: _props) {\n  return (\n    <div\n      className={`mood ${isSelected ? \"active\" : \"\"}`}\n      onClick={async () => {\n        onClick();\n        let musicList: Array<Music> = await fireBaseHelper.fetchMusic(mood);\n        playMusic(\n          musicList[Math.floor(Math.random() * (musicList.length - 0))]\n        );\n      }}\n    >\n      {mood}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/mute.d7f38ca3.svg\";","export default __webpack_public_path__ + \"static/media/unMute.8a278345.svg\";","import { useEffect, useState } from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport { Music } from \"../../types/music\";\nimport { ActionButton } from \"../misc/action-button/action-button\";\nimport Mood from \"./mood\";\nimport \"./moods.scss\";\n\nimport mute from \"../../assets/mute.svg\";\nimport unMute from \"../../assets/unMute.svg\";\nimport { fireBaseHelper } from \"../../App\";\n\ninterface _props {\n  setBottomMessage: (message: string) => void;\n  setIsBuffering: (isBuffering: boolean) => void;\n}\n\nexport default function Moods({ setBottomMessage, setIsBuffering }: _props) {\n  const [moods, setMoods] = useState([] as Array<string>);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [selected, setSelected] = useState(\"\");\n  const [isMuted, setIsMuted] = useState(false);\n  const [music, setMusic] = useState<Music>();\n  const [bg, setBg] = useState(\n    \"https://i.ytimg.com/vi/_ITiwPMUzho/maxresdefault.jpg\"\n  );\n\n  useEffect(() => {\n    async function fetchMoods() {\n      let fetchedMoods = await fireBaseHelper.fetchMoods();\n      setMoods(() => fetchedMoods);\n    }\n\n    fetchMoods();\n  }, []);\n\n  function playMusic(music: Music) {\n    setMusic(() => music);\n    setIsPlaying(() => true);\n  }\n  function checkAndSetBg(musicId?: string) {\n    let image = new Image();\n    image.src = `https://i.ytimg.com/vi/${musicId}/maxresdefault.jpg`;\n    image.onload = function () {\n      if (image.width > 120) {\n        setBg(image.src);\n      } else {\n        setBg(`https://i.ytimg.com/vi/${musicId}/hqdefault.jpg`);\n      }\n    };\n  }\n\n  return (\n    <div id=\"parent\" style={{ backgroundImage: `url(${bg})` }}>\n      <ActionButton\n        onClick={() => setIsMuted((current) => !current)}\n        isLoading={false}\n        text={\"\"}\n        icon={isMuted ? mute : unMute}\n        className=\"mute-button\"\n      />\n      <div id=\"moods\">\n        {moods.map((value) => (\n          <Mood\n            onClick={() => setSelected(value)}\n            mood={value}\n            playMusic={playMusic}\n            key={value}\n            isSelected={selected === value}\n          ></Mood>\n        ))}\n        <ReactPlayer\n          className=\"react-player\"\n          onStart={() => {\n            setBottomMessage(\"Now Playing: \" + music?.title);\n            checkAndSetBg(music?.link);\n          }}\n          onError={() =>\n            setBottomMessage(\"Something went wrong while fetching the music\")\n          }\n          onBuffer={() => setIsBuffering(true)}\n          onBufferEnd={() => setIsBuffering(false)}\n          playing={isPlaying}\n          muted={isMuted}\n          controls={true}\n          autoPlay={true}\n          url={`https://www.youtube.com/watch?v=${music?.link}`}\n          loop={true}\n          config={{\n            playerVars: {\n              height: \"144px\",\n              width: \"256px\",\n              vq: \"small\",\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","export class Music {\n  artist: string;\n  link: string;\n  title: string;\n  id: string;\n\n  constructor(artist: string, link: string, title: string, id: string) {\n    this.artist = artist;\n    this.link = link;\n    this.title = title;\n    this.id = id;\n  }\n}\n","import { MiniLoader } from \"../misc/loader/loader\";\nimport \"./bottom-indicator.scss\";\n\ninterface _props {\n  message: string;\n  isBuffering: boolean;\n}\nexport default function BottomIndicator({ message, isBuffering }: _props) {\n  console.log(isBuffering);\n  return (\n    <span id=\"bottom-indicator\">\n      {message}\n      {isBuffering ? <MiniLoader /> : \"\"}\n    </span>\n  );\n}\n","import \"./App.scss\";\n\nimport Moods from \"./components/moods/moods\";\nimport FireBaseHelper from \"./helpers/FirebaseHelper\";\nimport { initializeApp } from \"firebase/app\";\nimport BottomIndicator from \"./components/bottom-indicator/bottom-indicator\";\nimport { useState } from \"react\";\n\ninitializeApp({\n  apiKey: \"AIzaSyDl1rXG54RQlR7FnxPct8oLKYNkurrwNMY\",\n  authDomain: \"lofi-moods.firebaseapp.com\",\n  projectId: \"lofi-moods\",\n  storageBucket: \"lofi-moods.appspot.com\",\n  messagingSenderId: \"474872717326\",\n  appId: \"1:474872717326:web:50bfa76cd2dcf9164f5c5f\",\n  measurementId: \"G-Q75WDCCK7V\",\n});\nexport const fireBaseHelper = new FireBaseHelper();\n\nfunction App() {\n  const [isBuffering, setIsBuffering] = useState(false);\n  const [bottomMessage, setBottomMessage] = useState(\n    \"Hello, How are you today?\"\n  );\n\n  function _setIsBuffering(isBuffering: boolean) {\n    console.log(isBuffering);\n    setIsBuffering(() => isBuffering);\n  }\n\n  function _setBottomMessage(message: string) {\n    setBottomMessage(() => message);\n  }\n\n  return (\n    <div id=\"app\">\n      <Moods\n        setBottomMessage={_setBottomMessage}\n        setIsBuffering={_setIsBuffering}\n      ></Moods>\n      <BottomIndicator message={bottomMessage} isBuffering={isBuffering} />\n    </div>\n  );\n}\n\nexport default App;\n","import { collection, getDocs } from \"firebase/firestore\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { Music } from \"../types/music\";\n\nexport default class FireBaseHelper {\n  firestore = getFirestore();\n\n  public fetchMusic = async (mood: string): Promise<Array<Music>> => {\n    const querySnapshot = await getDocs(collection(this.firestore, mood));\n    let datas: Array<Music> = [];\n    querySnapshot.forEach((doc) => {\n      let data = doc.data();\n      datas.push(new Music(data.artist, data.link, data.title, doc.id));\n    });\n    return datas;\n  };\n\n  public fetchMoods = async (): Promise<Array<string>> => {\n    const querySnapshot = await getDocs(collection(this.firestore, \"moods\"));\n    let datas: Array<string> = [];\n    querySnapshot.forEach((doc) => {\n      let data = doc.data();\n      datas.push(data.name);\n    });\n    return datas;\n  };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}