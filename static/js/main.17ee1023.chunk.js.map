{"version":3,"sources":["components/moods/mood.tsx","assets/play.svg","assets/pause.svg","components/moods/moods.tsx","types/music.ts","components/bottom-indicator/bottom-indicator.tsx","App.tsx","helpers/FirebaseHelper.ts","reportWebVitals.ts","index.tsx"],"names":["Mood","mood","playMusic","className","onClick","a","fireBaseHelper","fetchMusic","musicList","Math","floor","random","length","link","Moods","useState","play","setPlayIcon","setBottomPreview","isPlaying","setIsPlaying","musicId","setMusicId","bg","setBg","checkAndSetBg","console","log","image","Image","src","onload","width","id","style","backgroundImage","map","value","onStart","onError","onPlay","onPause","pause","playing","controls","autoPlay","url","loop","config","playerVars","height","vq","Music","artist","title","this","BottomIndicator","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getFirestore","getDocs","collection","querySnapshot","datas","forEach","doc","data","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17ee1023.chunk.js","sourcesContent":["import { fireBaseHelper } from \"../../App\";\nimport { Music } from \"../../types/music\";\n\ninterface _props {\n  mood: string;\n  playMusic: (musicId: string) => void;\n}\nexport default function Mood({ mood, playMusic }: _props) {\n  return (\n    <div\n      className=\"mood\"\n      onClick={async () => {\n        let musicList: Array<Music> = await fireBaseHelper.fetchMusic(mood);\n        playMusic(\n          musicList[Math.floor(Math.random() * (musicList.length - 0))].link\n        );\n      }}\n    >\n      {mood}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/play.20181f97.svg\";","export default __webpack_public_path__ + \"static/media/pause.7eb12db0.svg\";","import { useState } from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport Mood from \"./mood\";\nimport \"./moods.scss\";\n\nimport play from \"../../assets/play.svg\";\nimport pause from \"../../assets/pause.svg\";\n\nexport default function Moods() {\n  const moods = [\"happy\", \"lonely\", \"relax\", \"sleep\"];\n  const [playIcon, setPlayIcon] = useState(play);\n  const [bottomPreview, setBottomPreview] = useState(\"How are you today?\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [musicId, setMusicId] = useState(\"\");\n  const [bg, setBg] = useState(\n    \"https://i.ytimg.com/vi/_ITiwPMUzho/maxresdefault.jpg\"\n  );\n\n  function playMusic(musicId: string) {\n    setMusicId(() => musicId);\n    checkAndSetBg(musicId);\n    setIsPlaying(() => true);\n    console.log(isPlaying);\n  }\n  function checkAndSetBg(musicId: string) {\n    let image = new Image();\n    image.src = `https://i.ytimg.com/vi/${musicId}/maxresdefault.jpg`;\n    image.onload = function () {\n      if (image.width > 120) {\n        setBg(image.src);\n      } else {\n        setBg(`https://i.ytimg.com/vi/${musicId}/hqdefault.jpg`);\n      }\n    };\n  }\n\n  return (\n    <div id=\"parent\" style={{ backgroundImage: `url(${bg})` }}>\n      <div id=\"moods\">\n        {moods.map((value) => (\n          <Mood mood={value} playMusic={playMusic}></Mood>\n        ))}\n        <ReactPlayer\n          className=\"react-player\"\n          onStart={() => {\n            setBottomPreview(\"Now Playing: \" + musicId);\n            checkAndSetBg(musicId);\n          }}\n          onError={() =>\n            setBottomPreview(\"Something went wrong while fetching the music\")\n          }\n          onPlay={() => setPlayIcon(play)}\n          onPause={() => setPlayIcon(pause)}\n          playing={isPlaying}\n          controls={true}\n          autoPlay={true}\n          url={`https://www.youtube.com/watch?v=${musicId}`}\n          loop={true}\n          config={{\n            playerVars: {\n              height: \"144px\",\n              width: \"256px\",\n              vq: \"small\",\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","export class Music {\n  artist: string;\n  link: string;\n  title: string;\n  id: string;\n\n  constructor(artist: string, link: string, title: string, id: string) {\n    this.artist = artist;\n    this.link = link;\n    this.title = title;\n    this.id = id;\n  }\n}\n","import \"./bottom-indicator.scss\";\n\nexport default function BottomIndicator() {\n  return <div id=\"bottom-indicator\">Bottom</div>;\n}\n","import \"./App.scss\";\n\nimport Moods from \"./components/moods/moods\";\nimport FireBaseHelper from \"./helpers/FirebaseHelper\";\nimport { initializeApp } from \"firebase/app\";\nimport BottomIndicator from \"./components/bottom-indicator/bottom-indicator\";\n\ninitializeApp({\n  apiKey: \"AIzaSyDl1rXG54RQlR7FnxPct8oLKYNkurrwNMY\",\n  authDomain: \"lofi-moods.firebaseapp.com\",\n  projectId: \"lofi-moods\",\n  storageBucket: \"lofi-moods.appspot.com\",\n  messagingSenderId: \"474872717326\",\n  appId: \"1:474872717326:web:50bfa76cd2dcf9164f5c5f\",\n  measurementId: \"G-Q75WDCCK7V\",\n});\nexport const fireBaseHelper = new FireBaseHelper();\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <Moods></Moods>\n      <BottomIndicator />\n    </div>\n  );\n}\n\nexport default App;\n","import { collection, getDocs, DocumentData } from \"firebase/firestore\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { Music } from \"../types/music\";\n\nexport default class FireBaseHelper {\n  firestore = getFirestore();\n\n  fetchMusic = async (mood: string) => {\n    console.log(\"fetching\" + mood);\n    const querySnapshot = await getDocs(collection(this.firestore, mood));\n    let datas: Array<Music> = [];\n    querySnapshot.forEach((doc) => {\n      let data = doc.data();\n      datas.push(new Music(data.artist, data.link, data.title, doc.id));\n    });\n    return datas;\n  };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}